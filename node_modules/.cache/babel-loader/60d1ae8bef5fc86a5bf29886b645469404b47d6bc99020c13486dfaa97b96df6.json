{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport companiesData from '../../constant/companiesData.json';\nconst API_KEY = '11d7e6b8232bd10c3d08da305786902b';\nconst API_BASE_URL = 'https://financialmodelingprep.com/api/v3';\nconst initialState = {\n  loading: false,\n  performingAction: false,\n  error: false,\n  success: false,\n  message: '',\n  companies: []\n};\nexport const fetchCategories = createAsyncThunk('catagories/fetchCategories', async () => {\n  try {\n    const symbolString = companiesData.symbols.join(',');\n    const companies = await axios.get(`${API_BASE_URL}/profile/${symbolString}?apikey=${API_KEY}`);\n    return companies.data;\n  } catch (error) {\n    return error.companies.data;\n  }\n});\n\n// Slice\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    RESET_VALUE(state) {\n      state.error = false;\n      state.success = false;\n      state.performingAction = false;\n      state.companies = [];\n    },\n    searchcategories(state, action) {\n      state.companies = state.companies.filter(company => {\n        const companySymbol = company.companyName.toLowerCase();\n        const searchTerm = action.payload.toLowerCase();\n        return companySymbol.includes(searchTerm);\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.loading = true;\n      state.performingAction = true;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.performingAction = false;\n      state.companies = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = true;\n      state.performingAction = false;\n      state.message = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.errors[0];\n      state.companies = [];\n    });\n  }\n});\nexport const {\n  RESET_VALUE,\n  searchcategories\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","companiesData","API_KEY","API_BASE_URL","initialState","loading","performingAction","error","success","message","companies","fetchCategories","symbolString","symbols","join","get","data","categoriesSlice","name","reducers","RESET_VALUE","state","searchcategories","action","filter","company","companySymbol","companyName","toLowerCase","searchTerm","payload","includes","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","errors","actions","reducer"],"sources":["C:/Users/Henok/OneDrive - Ethiopian Airlines/Desktop/Microverse/financial-profile-explorer/src/redux/catagory/catagoriesSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport companiesData from '../../constant/companiesData.json';\n\nconst API_KEY = '11d7e6b8232bd10c3d08da305786902b';\nconst API_BASE_URL = 'https://financialmodelingprep.com/api/v3';\n\nconst initialState = {\n  loading: false,\n  performingAction: false,\n  error: false,\n  success: false,\n  message: '',\n  companies: [],\n};\n\nexport const fetchCategories = createAsyncThunk('catagories/fetchCategories', async () => {\n  try {\n    const symbolString = companiesData.symbols.join(',');\n    const companies = await axios.get(\n      `${API_BASE_URL}/profile/${symbolString}?apikey=${API_KEY}`,\n    );\n    return companies.data;\n  } catch (error) {\n    return error.companies.data;\n  }\n});\n\n// Slice\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    RESET_VALUE(state) {\n      state.error = false;\n      state.success = false;\n      state.performingAction = false;\n      state.companies = [];\n    },\n    searchcategories(state, action) {\n      state.companies = state.companies.filter((company) => {\n        const companySymbol = company.companyName.toLowerCase();\n        const searchTerm = action.payload.toLowerCase();\n        return companySymbol.includes(searchTerm);\n      });\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCategories.pending, (state) => {\n      state.loading = true;\n      state.performingAction = true;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.performingAction = false;\n      state.companies = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.loading = false;\n      state.error = true;\n      state.performingAction = false;\n      state.message = action.payload?.errors[0];\n      state.companies = [];\n    });\n  },\n});\n\nexport const { RESET_VALUE, searchcategories } = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}