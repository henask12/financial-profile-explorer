{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport companiesData from '../../constant/companiesData.json';\nconst BASE_URL = 'https://financialmodelingprep.com/api/v3/';\nconst initialState = {\n  loading: false,\n  performingAction: false,\n  error: false,\n  success: false,\n  message: '',\n  companies: []\n};\nexport const fetchCategories = createAsyncThunk('catagories/fetchCategories', async () => {\n  try {\n    const symbolString = companiesData.symbols.join(',');\n    const companies = await axios.get(`${API_BASE_URL}/profile/${symbolString}?apikey=${API_KEY}`);\n    return companies.data;\n  } catch (error) {\n    return error.companies.data;\n  }\n});\n\n// Slice\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    RESET_VALUE(state) {\n      state.error = false;\n      state.success = false;\n      state.performingAction = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.loading = true;\n      state.performingAction = true;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.performingAction = false;\n      state.companies = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = true;\n      state.performingAction = false;\n      state.message = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.errors[0];\n      state.companies = [];\n    });\n  }\n});\nexport const {\n  RESET_VALUE\n} = rocketsSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","companiesData","BASE_URL","initialState","loading","performingAction","error","success","message","companies","fetchCategories","symbolString","symbols","join","get","API_BASE_URL","API_KEY","data","categoriesSlice","name","reducers","RESET_VALUE","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$payload","errors","rocketsSlice","actions","reducer"],"sources":["C:/Users/Henok/OneDrive - Ethiopian Airlines/Desktop/Microverse/financial-profile-explorer/src/redux/catagory/catagoriesSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport companiesData from '../../constant/companiesData.json';\n\nconst BASE_URL = 'https://financialmodelingprep.com/api/v3/';\n\nconst initialState = {\n  loading: false,\n  performingAction: false,\n  error: false,\n  success: false,\n  message: '',\n  companies: [],\n};\n\nexport const fetchCategories = createAsyncThunk('catagories/fetchCategories', async () => {\n  try {\n    const symbolString = companiesData.symbols.join(',');\n    const companies = await axios.get(\n      `${API_BASE_URL}/profile/${symbolString}?apikey=${API_KEY}`\n    );\n    return companies.data;\n  } catch (error) {\n    return error.companies.data;\n  }\n});\n\n// Slice\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    RESET_VALUE(state) {\n      state.error = false;\n      state.success = false;\n      state.performingAction = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCategories.pending, (state) => {\n      state.loading = true;\n      state.performingAction = true;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.performingAction = false;\n      state.companies = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.loading = false;\n      state.error = true;\n      state.performingAction = false;\n      state.message = action.payload?.errors[0];\n      state.companies = [];\n    });\n  },\n});\n\nexport const { RESET_VALUE } = rocketsSlice.actions;\nexport default categoriesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,mCAAmC;AAE7D,MAAMC,QAAQ,GAAG,2CAA2C;AAE5D,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,gBAAgB,EAAE,KAAK;EACvBC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGZ,gBAAgB,CAAC,4BAA4B,EAAE,YAAY;EACxF,IAAI;IACF,MAAMa,YAAY,GAAGV,aAAa,CAACW,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACpD,MAAMJ,SAAS,GAAG,MAAMT,KAAK,CAACc,GAAG,CAC9B,GAAEC,YAAa,YAAWJ,YAAa,WAAUK,OAAQ,EAC5D,CAAC;IACD,OAAOP,SAAS,CAACQ,IAAI;EACvB,CAAC,CAAC,OAAOX,KAAK,EAAE;IACd,OAAOA,KAAK,CAACG,SAAS,CAACQ,IAAI;EAC7B;AACF,CAAC,CAAC;;AAEF;;AAEA,MAAMC,eAAe,GAAGnB,WAAW,CAAC;EAClCoB,IAAI,EAAE,YAAY;EAClBhB,YAAY;EACZiB,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAE;MACjBA,KAAK,CAAChB,KAAK,GAAG,KAAK;MACnBgB,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACjB,gBAAgB,GAAG,KAAK;IAChC;EACF,CAAC;EACDkB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,eAAe,CAACgB,OAAO,EAAGJ,KAAK,IAAK;MAClDA,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACjB,gBAAgB,GAAG,IAAI;IAC/B,CAAC,CAAC;IACFmB,OAAO,CAACC,OAAO,CAACf,eAAe,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC5DN,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,gBAAgB,GAAG,KAAK;MAC9BiB,KAAK,CAACb,SAAS,GAAGmB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACf,eAAe,CAACoB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAAA,IAAAG,eAAA;MAC3DT,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAAChB,KAAK,GAAG,IAAI;MAClBgB,KAAK,CAACjB,gBAAgB,GAAG,KAAK;MAC9BiB,KAAK,CAACd,OAAO,IAAAuB,eAAA,GAAGH,MAAM,CAACC,OAAO,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,CAAC,CAAC,CAAC;MACzCV,KAAK,CAACb,SAAS,GAAG,EAAE;IACtB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEY;AAAY,CAAC,GAAGY,YAAY,CAACC,OAAO;AACnD,eAAehB,eAAe,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}