{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport apiService from './apiService'; // Import your API service\n\nexport const fetchCategories = createAsyncThunk('categories/fetchCategories', async () => {\n  const categories = await apiService.fetchCategories();\n  return categories;\n});\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    data: [],\n    status: 'idle',\n    // idle | loading | succeeded | failed\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategories.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchCategories.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apiService","fetchCategories","categories","categoriesSlice","name","initialState","data","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/Henok/OneDrive - Ethiopian Airlines/Desktop/Microverse/financial-profile-explorer/src/redux/catagory/catagoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport apiService from './apiService'; // Import your API service\r\n\r\nexport const fetchCategories = createAsyncThunk('categories/fetchCategories', async () => {\r\n  const categories = await apiService.fetchCategories();\r\n  return categories;\r\n});\r\n\r\nconst categoriesSlice = createSlice({\r\n  name: 'categories',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle', // idle | loading | succeeded | failed\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCategories.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchCategories.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default categoriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;;AAEvC,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,4BAA4B,EAAE,YAAY;EACxF,MAAMG,UAAU,GAAG,MAAMF,UAAU,CAACC,eAAe,CAAC,CAAC;EACrD,OAAOC,UAAU;AACnB,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAGL,WAAW,CAAC;EAClCM,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,eAAe,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACX,eAAe,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACX,eAAe,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,eAAe,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}